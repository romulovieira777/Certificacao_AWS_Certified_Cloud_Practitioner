Agora já entendemos o conceito de bastion host, mas antes de configurá-lo no nosso projeto, quero mostrar que nossos
logs de fluxo começaram a ser publicados. Perceberemos uma enorme quantidade de tentativas de conexão rejeitadas, porque
as requisições começam a chegar quando temos uma máquina disponível com IP público.

Vamos abrir o EC2, onde configuraremos uma nova máquina que servirá apenas como bastion host. Então na seção "Recursos"
do painel EC2 clicaremos em "Instâncias (em execução)". A página atualiza e, em seguida, clicamos em "Executar
instâncias" no canto superior direito.

Essa nova instância se chamará "bastion-host" e, a partir disso, podemos seguir duas abordagens: ter um bastion host
para cada máquina que quisermos acessar na nossa sub-rede privada ou um que serve para todos os cenários. Então imaginem
que temos um banco de dados e um sistema de "mensagenria" e queremos logar nos dois. Nesse caso podemos ter um ou dois
bastion hosts.

Eu, Vinicius, prefiro ter apenas um bastion host, porque conseguimos limitá-lo mais e permitir a conexão somente para as
duas máquinas. Eu não vejo sentido em ter dois, mas já vi configurações de rede com mais de um bastion host, então é
possível e vocês podem preferir assim para o cenário de vocês.

Continuando a criação da instância, ela será um Amazon Linux, mas vocês podem escolher uma imagem menor para esses
cenários. Na verdade é bem comum que bastion hosts sejam máquinas menores e, portanto, tenham imagens menores. Contudo,
como estamos com tudo em free trial (teste grátis), vamos seguir.

Usaremos novamente a "aws-ohio" como chave" e faremos as configurações de rede. Precisaremos que ela esteja na nossa VPC
e esteja pública, então vamos habilitar o IP público, já que o bastion host precisa ser acessível pela Internet na porta
SSH.

Criaremos um novo número de segurança, chamado "bastion-host", ou seja, um grupo de segurança específico para ele. E a
descrição será "permitir-acesso-ssh-somente-ao-bastion-host". Vocês podem pensar em uma descrição melhor caso queiram.

Na seção de "Regras do grupo de segurança de entrada", o "Tipo" já veio configurado com o SSH, e em "Tipo de origem", o
ideal é que não seja de qualquer lugar, então vamos trocar para "Meu IP".

Poderíamos adicionar mais regras de segurança, como as interfaces de rede que já vimos, mas nesse caso não tem
necessidade disso. Essa, portanto, é nossa regra de segurança, apenas com uma regra de entrada. Também não vamos alterar
nenhuma configuração de armazenamento, então podemos clicar em "Executar instância" no canto inferior direito.

Agora voltaremos para página de Instâncias, selecionaremos o "bastion-host" e descobriremos o "Endereços IPv4 privados".
Copiaremos esse número, que no meu caso é o "10.0.6.112" e permitiremos a acesso à "maquina-bd" apenas através desse IP
do bastion host, e não através da "maquina-web".

Para isso voltaremos aos grupos de segurança, então no menu esquerdo acessaremos "Rede e segurança > Security groups".
Nele temos o "ssh-web-bd". Clicaremos no ID dele para irmos para página de edição desse ID.

Somos movidos para página desse grupo de segurança, onde rolaremos para seção de "Regras de entrada" e clicaremos no
botão "Editar regras de entrada", que é o terceiro botão à direita do título. Clicando nela, somos direcionados para
outra página, onde no campo "Origem" removeremos o IP que está lá e adicionaremos o IP do bastion host que acabamos de
copiar.

Com isso fizemos uma mudança. Não receberemos mais as conexões da "maquina-web", apenas do "bastion-host". Isso
porque nossa "maquina-web" pode receber mais acessos, mas o bastion host só recebe acesso SSH da nossa máquina, ou seja,
ele é um pouco mais restrito. Portanto, vamos clicar no botão "Salvar" no canto inferior direito.

A princípio temos tudo configurado, então vamos fazer um teste. Voltando para o painel EC2, acessaremos novamente a
Instâncias e queremos acessar a "maquina-bd", que é a máquina de banco de dados, portanto copiaremos o IP privado dela.

Em seguida abriremos o terminal e passaremos o SSH com a chave, com -i ./aws-ohio e acessaremos usando o
ec2-user@ip-privado-maquinabd. No meu caso ficou:

ssh -i ./aws-ohio.pem ec2-user@10.0.130.4

Contudo, antes de acessar a "maquina-bd", precisamos passar o bastion host, que em alguns lugares também é chamado de
jump host. Para isso, entre a chave e o IP da máquina, usamos o comando -J seguido de
ec2-user@ip-publico-do-bastion-host.

Esse IP público encontramos no campo "Endereço IP atribuído automaticamente" nos dados de instância do "bastion-host",
basta copiarmos o número, que é seguido de "[IP público]". Então o meu comando final ficou:

ssh -i ./aws-ohio.pem -J ec2-user@3.129.9.228 ec2-user@10.0.130.4

Observação: Essa opção existe desde a versão 7.3 do cliente SSH, então se tiverem uma versão mais antiga, precisarão
atualizar para usar esse comando.

Quando tentarmos fazer a conexão, receberemos a mensagem informando que o host será adicionado e se temos certeza que
queremos continuar. Escrevemos "yes" e pressionamos "Enter" para adicionar. Isso leva um tempo a mais, porém no final
recebemos a mensagem que estabelecemos conexão com nossa máquina privada.

Então conseguimos nos conectar a nossa máquina privada passando por um outro ponto na nossa rede. Eu informei que esse
não é um curso de SSH, mas estou mostrando esse detalhe de SSH porque ele é muito comum.

Inclusive imaginem que essa "maquina-bd" com a qual nos conectamos realmente é uma máquina de banco de dados. Nesse caso,
teremos no nosso cliente de banco de dados uma opção chamada "bastion host", "jump host" ou "proxy", dependendo do seu
cliente. De toda forma, vocês também vão configurar essa parte. Portanto esse tipo de acesso é muito comum e como
estamos falando de VPC e limitação de redes, é interessante conhecermos esse detalhe também.

Com isso limitamos mais o acesso, e agora só conseguimos acessar a máquina que está na sub-rede privada a partir de um
bastion host, ou seja, uma máquina específica para isso. Também já conseguimos monitorar o que está acontecendo na nossa
rede, porque criamos nossos logs.

Com isso temos um bom começo para termos uma VPC robusta. Aprendemos bastante, então no próximo vídeo eu volto para
fazermos uma revisão do que aprendemos no curso.
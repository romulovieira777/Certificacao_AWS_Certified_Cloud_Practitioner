Anteriormente, citamos conceitos que ainda não colocamos em prática.

Vamos aplicar um cenário bastante comum: eu trabalho em uma empresa onde fornecemos um sistema de marketing que possui
milhões de pessoas usuárias, já que os clientes são empresas, cada um pode ter vários logins.

Dentro destes logins, podemos ter inúmeras configurações. A própria pessoa usuária pode entrar no sistema e criá-las.

Quando uma configuração está habilitada ou possui determinado valor, uma parte do sistema funcionará de uma forma. Com
outro valor, ela funcionará de outra forma.

Dentro deste cenário, se usássemos um banco de dados relacional, precisaríamos ter três elementos:

    - Uma tabela chamada "Configurações"
    - Uma coluna chamada "Funcionalidade" que terá o nome da configuração criada pela pessoa usuária
    - Um valor

Considerando que cada pessoa usuária pode ter várias configurações, teríamos um volume de dados enorme.

Este é um cenário bastante comum para utilizar o DynamoDB. Ele é simples — podemos utilizar este banco em cenários bem
mais complexos —, mas é um ótimo exemplo inicial, pois é fácil de entender e compõe somente uma chave (configuração) e
seu valor.

Este caso gerará um volume gigantesco de dados, e para habilitar ou desabilitar uma funcionalidade, precisamos que isso
seja buscado rapidamente — portanto, se trata de um cenário perfeito para o DynamoDB.

Voltando à página "Tabelas" aberta no navegador, selecionaremos o botão "Criar tabela", localizado à direita na barra de
tarefas da seção. Seremos direcionados para a página "Criar tabela".

Nela, criaremos uma tabela chamada "Config", digitando este nome no campo "Nome da tabela", dentro da seção "Detalhes da
tabela". Lembrando que, em um cenário real, a tabela deverá ter um nome mais descritivo.

Dica: Na criação da tabela, o ideal é não utilizar nenhum acento ou caractere especial.

Eu, Vinicius, prefiro manter tudo em caixa baixa, mas é bastante comum no DynamoDB a criação 'e tabelas com a primeira
letra em caixa alta, portanto, faremos isso aqui. Contudo, é interessante combinar com a equipe o padrão de criação a
ser seguido.

Abaixo deste campo, temos o campo denominado "Chave de partição". Este é um conceito muito importante.

Conforme vimos anteriormente, o DynamoDB é um banco de chave/valor, e essa chave pode ser composta. A chave de partição
(partition key, em inglês) faz parte da nossa chave primária que identificará um item.

Precisamos ter sempre uma identificação para o item. Assim como no banco de dados relacional, temos uma chave primária
no DynamoDB. No caso deste banco, ela pode ser somente de partição, ou a junção de uma chave de partição com uma chave
de classificação (sort key). Esta escolha é opcional.

No nosso cenário, teremos uma chave primária composta de chave de partição e de classificação, pois armazenaremos a
pessoa usuária que possui a configuração, junto ao nome da configuração. Precisamos das duas informações.

No campo "Chave de partição", digitaremos o nome da nossa chave que será criada: "user_id", que representará a
identificação da pessoa usuária.

Abaixo deste, temos o campo "Chave de classificação - opcional", no qual digitaremos o nome da chave a ser criada:
"setting". Esta representa a configuração criada pela pessoa usuária.

À direita de ambos os campos de chave, temos um botão de lista suspensa com a opção "String" selecionada. Se clicarmos
nele, veremos que também é possível criar as chaves com os tipos "Binário" ou "Número". Neste caso, manteremos como
Strings.

Estamos criando uma tabela chamada "Config" que terá como chave primária — ou seja, o valor que identifica cada item — o
Id de uma pessoa usuária e o nome da configuração que será criada.

Podemos ter várias pessoas usuárias com a mesma configuração, assim como podemos ter uma pessoa usuária com várias
configurações diferentes. Por isso, nossa chave será composta.

A chave de partição sempre precisa ser informada em nossas consultas. Já a chave de classificação pode ser utilizada
para filtrar a pesquisa mais profundamente.

Ou seja, podemos buscar todas as funcionalidades de uma pessoa usuária utilizando a chave de partição, ou buscar uma
configuração específica dele, utilizando "user_id" junto ao "setting".

Entretanto, com as configurações que temos, não é possível buscar todas as pessoas usuárias que possuem determinada
configuração, pois a chave de partição é obrigatória. Posteriormente, veremos funcionalidades que permitirão realizar
essa busca.

Resumindo, a chave primária consiste na partition key e na sort key. Isso é muito importante, e não será alterado no
futuro. Nossa tabela sempre terá estes elementos, e por isso precisamos pensar bem em quais serão esses valores.

Como dito anteriormente, no sistema em que trabalho, listamos somente as funcionalidades de uma pessoa usuária ou uma
única funcionalidade de uma única pessoa. É isso que precisamos.

Se precisássemos de outras pesquisas, trocaríamos os nomes das chaves. Por exemplo, se o objetivo fosse buscar todas as
pessoas usuárias que possuem determinada funcionalidade, inverteríamos os nomes e chamaríamos a partition key de
"setting", enquanto a sort key seria denominada "user_id", tendo "setting" como o valor obrigatório de busca.

Abaixo da seção atual, "Detalhes da tabela", temos a seção "Configurações da tabela", com a opção "Configurações padrão"
selecionada.

Enquanto no RDS configuramos muitos detalhes, aqui será mais simples. Manteremos habilitadas as opções padrão, entre
elas o "Modo de capacidade", a "Capacidade de leitura" e o "Auto Scaling". Entenderemos alguns destes conceitos
posteriormente neste curso.

Aqui temos menos configurações em relação ao RDS, pois a ideia do DynamoDB é centralizar ainda mais o gerenciamento na
AWS, permitindo que nos preocupemos menos com a infraestrutura.

Já temos o necessário para criar nossa primeira tabela. Na última seção da página, denominada "Tags", podemos definir
tags para organização, assim como no SE2, no RDS e nas VPCs.

Vamos imaginar que temos uma tag para determinado serviço. Tudo o que tiver essa tag estará relacionado a ele.

Já que estamos em um curso de DynamoDB, não precisamos definir nenhuma tag.

Por fim, selecionaremos o botão "Criar tabela", alinhado à esquerda e abaixo desta seção. Com isso, nossa tabela
começará a ser criada e seremos direcionados para a página "Tabelas", onde veremos a coluna "Nome" com um link que
denominado "Config".

À sua direita, temos a coluna "Status", onde vemos a informação "Criando". O processo de criação demorará alguns
minutos, pois tem bastante coisa acontecendo.

À direita de "Status", temos as seções "Chave de partição" e "Chave de Classificação". Elas possuem as informações
"user_id (S)" e "setting (S)", respectivamente.

O "S" entre parênteses representa o tipo da coluna (neste caso, "String"). Se criarmos a tabela pelo terminal precisamos
informar o tipo desta forma, com sua primeira letra.

Para o tipo "String", usamos o "S"; para "Número", o "N"; para "Binário", o "B", e assim em diante. É importante nos
familiarizarmos com estes detalhes, pois podemos precisar deles caso utilizarmos a linha de comando.

No que tange o código, cada linguagem possuirá uma biblioteca adaptada para o seu cenário. Pode ser que seja necessário
utilizar uma enum para definir o tipo, uma string com a primeira letra do tipo, ou outra técnica. Não abordaremos
profundamente este assunto.

Temos configurados o Auto Scaling, a capacidade de leitura, entre outros detalhes. Já o tamanho da tabela está zerado.

Queremos ler os dados dessa tabela. Para isso, adicionaremos dados.

No próximo vídeo, criaremos e adicionaremos configurações à tabela e aprenderemos como buscá-las. Nos vemos lá.